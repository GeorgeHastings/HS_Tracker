"use strict";var Detail={currentDeck:""},Helpers={checkDoubles:function(e){for(var t=[],r=0;r<=e.length;r++){if(void 0!==t[e[r]])return!0;t[e[r]]=1}return!1}},UI={loadBar:document.querySelector(".load-bar"),deckList:document.querySelector(".deck-list"),mainContainer:document.querySelector(".main-container"),played:document.querySelector(".played"),wins:document.querySelector(".wins"),losses:document.querySelector(".losses"),winrate:document.querySelector(".winrate"),classCharts:document.querySelector(".class-breakdown"),deckListTmp:document.getElementById("deckListTemplate"),cardSearch:{matches:[],el:document.getElementById("cardSearch"),results:document.querySelector(".card-search-results"),cardResultTemplate:document.getElementById("cardResultTemplate"),lookUpCard:function(){var e=UI.cardSearch.el.value;if(UI.cardSearch.matches=[],e.length>2)for(var t=0;t<Cards.cardNames.length;t++)Cards.cardNames[t].toLowerCase().includes(e)&&UI.cardSearch.matches.push(Cards.cardNames[t]);UI.cardSearch.matches.length>0?UI.cardSearch.renderResults():UI.cardSearch.hideResults()},renderResults:function(){UI.cardSearch.results.innerHTML="",UI.cardSearch.results.className="card-search-results show";for(var e=0;e<UI.cardSearch.matches.length;e++){var t=UI.cardSearch.cardResultTemplate.content.cloneNode(!0),r=t.querySelector("li");r.innerText=UI.cardSearch.matches[e],r.onclick=Cards.getCard,UI.cardSearch.results.appendChild(t)}},hideResults:function(){UI.cardSearch.results.className="card-search-results"}},cardList:{cardTmp:document.getElementById("cardTemplate"),el:document.querySelector(".deck-cards"),list:[],sortList:function(e,t){var r=e.cost,a=t.cost,s=e.name,n=t.name;return a>r?-1:r>a?1:n>s?-1:s>n?1:0},addCardToList:function(e){UI.cardList.list.push(e),UI.cardList.saveDeck(),UI.cardList.renderList()},removeCardFromList:function(){var e=this.innerHTML;UI.cardList.list.sort(this.sortList);for(var t=0;t<UI.cardList.list.length;t++)UI.cardList.list[t].name===e&&(document.getElementById(UI.cardList.list[t].id).setAttribute("data-count",""),UI.cardList.list.splice(t,1));UI.cardList.saveDeck(),UI.cardList.renderList()},renderList:function(){if(document.querySelector(".deck-cardlist h3").setAttribute("data-count",UI.cardList.list.length),UI.cardList.el.innerHTML="",UI.cardList.list){UI.cardList.list.sort(this.sortList);for(var e=0;e<UI.cardList.list.length;e++)if(e>0&&UI.cardList.list[e].id===UI.cardList.list[e-1].id)document.getElementById(UI.cardList.list[e].id).setAttribute("data-count",2);else{var t=this.cardTmp.content.cloneNode(!0),r=t.querySelector("li");r.innerHTML=UI.cardList.list[e].name,r.setAttribute("id",UI.cardList.list[e].id),r.setAttribute("data-cost",UI.cardList.list[e].cost),r.className=UI.cardList.list[e].rarity.toLowerCase(),r.onclick=UI.cardList.removeCardFromList,this.el.appendChild(t)}}},saveDeck:function(){var e=Parse.Object.extend("Deck"),t=new Parse.Query(e);t.equalTo("name",Detail.currentDeck),t.first({success:function(e){e.set("deckList",UI.cardList.list),e.save()}})}},newDeckContainer:{el:document.getElementById("newDeckContainer"),name:document.getElementById("newDeckName"),"class":document.getElementById("newDeckClass"),show:function(){UI.newDeckContainer.el.className="new-deck-container show"},hide:function(){UI.newDeckContainer.el.className="new-deck-container"}}},Cards={result:{},query:"",cardNames:[],collectNames:function(e){for(var t=0;t<e.length;t++)Cards.cardNames.push(e[t].name)},returnNames:function(e){var t=e.target.responseText,r=JSON.parse(t);Cards.collectNames(r)},buildNameArray:function(){Cards.getJSON(Cards.returnNames)},getJSON:function(e){var t=new XMLHttpRequest;t.onload=e,t.open("GET","cards.json"),t.send()},returnCard:function(e){for(var t=e.target.responseText,r=JSON.parse(t),a=0;a<r.length;a++)if(r[a].name===Cards.query){var s=r[a];UI.cardList.addCardToList(s)}},getCard:function(){Cards.query=this.innerText,Cards.getJSON(Cards.returnCard)}},Decks={createNewDeck:function(){event.preventDefault();var e=Parse.Object.extend("Deck"),t=new e;t.save({name:UI.newDeckContainer.name.value,heroClass:UI.newDeckContainer["class"].value,played:0,wins:0,losses:0,winRate:"0%"},{success:function(){Decks.pullDeckList(),UI.newDeckContainer.hide()},error:function(e,t){}})},renderDeckList:function(e){UI.deckList.innerHTML="";for(var t=0;t<e.length;t++){var r=UI.deckListTmp.content.cloneNode(!0),a=r.querySelector("li");a.setAttribute("data-index",t),a.innerHTML+=e[t].get("name"),a.onclick=Decks.pullDeckByIndex,UI.deckList.appendChild(r)}},pullDeckList:function(){var e=Parse.Object.extend("Deck"),t=new Parse.Query(e);t.find({success:function(e){Decks.renderDeckList(e)},error:function(e,t){console.log("something fucked up")}})},pullDeckByIndex:function(e){UI.loadBar.className="load-bar loading";var t=this.innerText,r=Parse.Object.extend("Deck"),a=new Parse.Query(r);Detail.currentDeck=t,a.equalTo("name",t),a.find({success:function(e){renderDetail(e[0])},error:function(e,t){console.log("something fucked up")}})},pullFirstDeck:function(e){UI.loadBar.className="load-bar loading";var t=Parse.Object.extend("Deck"),r=new Parse.Query(t);r.first({success:function(e){Detail.currentDeck=e.get("name"),renderDetail(e)},error:function(e,t){console.log("something fucked up")}})}},Matchups={matchups:[],played:0,win:0,loss:0,getMatchups:function(){var e=Parse.Object.extend("Deck"),t=new Parse.Query(e);t.equalTo("name",Detail.currentDeck),t.first({success:function(e){Matchups.matchups=e.get("matchUps"),Matchups.calcStats(),Matchups.renderStats(),Matchups.renderChart()}})},calcStats:function(){for(var e=0,t=0,r=0,a=0;a<this.matchups.length;a++)e++,"win"===this.matchups[a].outcome?t++:r++;Matchups.played=e,Matchups.win=t,Matchups.loss=r},renderStats:function(){UI.played.innerHTML=this.played,UI.wins.innerHTML=this.win,UI.losses.innerHTML=this.loss,UI.winrate.innerHTML=this.win/this.played*100+"%"},renderChart:function(){for(var e=0;e<this.matchups.length;e++){var t=UI.classCharts.querySelector('[data-class="'+this.matchups[e].opponent+'"]');"win"===this.matchups[e].outcome&&(t.style.height="50%")}}},renderDetail=function(e){document.getElementById("deck-portrait").className=e.get("heroClass"),UI.mainContainer.querySelector(".deck-name").innerHTML=e.get("name"),UI.mainContainer.querySelector(".played").innerHTML=e.get("played"),UI.mainContainer.querySelector(".wins").innerHTML=e.get("wins"),UI.mainContainer.querySelector(".losses").innerHTML=e.get("losses"),UI.mainContainer.querySelector(".winrate").innerHTML=e.get("winRate"),void 0!==e.get("deckList")?UI.cardList.list=e.get("deckList"):UI.cardList.list=[],Matchups.getMatchups(),UI.cardList.renderList(),UI.loadBar.className="load-bar loaded"};Cards.buildNameArray(),Decks.pullDeckList(),Decks.pullFirstDeck();